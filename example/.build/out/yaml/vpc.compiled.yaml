---
AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  Az0:
    Fn::Not:
    - Fn::Equals:
      - Ref: Az0
      - false
  Az1:
    Fn::Not:
    - Fn::Equals:
      - Ref: Az1
      - false
  Az2:
    Fn::Not:
    - Fn::Equals:
      - Ref: Az2
      - false
  Az3:
    Fn::Not:
    - Fn::Equals:
      - Ref: Az3
      - false
  Az4:
    Fn::Not:
    - Fn::Equals:
      - Ref: Az4
      - false
  1Az:
    Fn::And:
    - Condition: Az0
    - Fn::Not:
      - Condition: Az1
    - Fn::Not:
      - Condition: Az2
    - Fn::Not:
      - Condition: Az3
    - Fn::Not:
      - Condition: Az4
  2Az:
    Fn::And:
    - Condition: Az0
    - Condition: Az1
    - Fn::Not:
      - Condition: Az2
    - Fn::Not:
      - Condition: Az3
    - Fn::Not:
      - Condition: Az4
  3Az:
    Fn::And:
    - Condition: Az0
    - Condition: Az1
    - Condition: Az2
    - Fn::Not:
      - Condition: Az3
    - Fn::Not:
      - Condition: Az4
  4Az:
    Fn::And:
    - Condition: Az0
    - Condition: Az1
    - Condition: Az2
    - Condition: Az3
    - Fn::Not:
      - Condition: Az4
  5Az:
    Fn::And:
    - Condition: Az0
    - Condition: Az1
    - Condition: Az2
    - Condition: Az3
    - Condition: Az4
  1NatGateways:
    Fn::Equals:
    - '1'
    - Ref: MaxNatGateways
  2NatGateways:
    Fn::Equals:
    - '2'
    - Ref: MaxNatGateways
  3NatGateways:
    Fn::Equals:
    - '3'
    - Ref: MaxNatGateways
  4NatGateways:
    Fn::Equals:
    - '4'
    - Ref: MaxNatGateways
  5NatGateways:
    Fn::Equals:
    - '5'
    - Ref: MaxNatGateways
  RoutedBySingleNat:
    Fn::Equals:
    - Ref: SingleNatGateway
    - 'true'
  NatGateway0Exist:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az0
        - false
    - Fn::Or:
      - Fn::Equals:
        - '1'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '2'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '3'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '4'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
  RoutedByNat0:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az0
          - false
      - Fn::Or:
        - Fn::Equals:
          - '1'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '2'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Not:
      - Fn::Equals:
        - Ref: SingleNatGateway
        - 'true'
  RoutedBySingleNat0:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az0
        - false
    - Fn::Equals:
      - Ref: SingleNatGateway
      - 'true'
  NatGateway1Exist:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az1
        - false
    - Fn::Or:
      - Fn::Equals:
        - '2'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '3'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '4'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
  RoutedByNat1:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az1
          - false
      - Fn::Or:
        - Fn::Equals:
          - '2'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Not:
      - Fn::Equals:
        - Ref: SingleNatGateway
        - 'true'
  RoutedBySingleNat1:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az1
        - false
    - Fn::Equals:
      - Ref: SingleNatGateway
      - 'true'
  NatGateway2Exist:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az2
        - false
    - Fn::Or:
      - Fn::Equals:
        - '3'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '4'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
  RoutedByNat2:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az2
          - false
      - Fn::Or:
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Not:
      - Fn::Equals:
        - Ref: SingleNatGateway
        - 'true'
  RoutedBySingleNat2:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az2
        - false
    - Fn::Equals:
      - Ref: SingleNatGateway
      - 'true'
  NatGateway3Exist:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az3
        - false
    - Fn::Or:
      - Fn::Equals:
        - '4'
        - Ref: MaxNatGateways
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
  RoutedByNat3:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az3
          - false
      - Fn::Or:
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Not:
      - Fn::Equals:
        - Ref: SingleNatGateway
        - 'true'
  RoutedBySingleNat3:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az3
        - false
    - Fn::Equals:
      - Ref: SingleNatGateway
      - 'true'
  NatGateway4Exist:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az4
        - false
    - Fn::Equals:
      - '5'
      - Ref: MaxNatGateways
  RoutedByNat4:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az4
          - false
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
    - Fn::Not:
      - Fn::Equals:
        - Ref: SingleNatGateway
        - 'true'
  RoutedBySingleNat4:
    Fn::And:
    - Fn::Not:
      - Fn::Equals:
        - Ref: Az4
        - false
    - Fn::Equals:
      - Ref: SingleNatGateway
      - 'true'
  Nat0EIPRequired:
    Fn::Equals:
    - Ref: Nat0EIPAllocationId
    - dynamic
  NatIPAddress0Required:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az0
          - false
      - Fn::Or:
        - Fn::Equals:
          - '1'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '2'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Equals:
      - Ref: Nat0EIPAllocationId
      - dynamic
  Nat1EIPRequired:
    Fn::Equals:
    - Ref: Nat1EIPAllocationId
    - dynamic
  NatIPAddress1Required:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az1
          - false
      - Fn::Or:
        - Fn::Equals:
          - '2'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Equals:
      - Ref: Nat1EIPAllocationId
      - dynamic
  Nat2EIPRequired:
    Fn::Equals:
    - Ref: Nat2EIPAllocationId
    - dynamic
  NatIPAddress2Required:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az2
          - false
      - Fn::Or:
        - Fn::Equals:
          - '3'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Equals:
      - Ref: Nat2EIPAllocationId
      - dynamic
  Nat3EIPRequired:
    Fn::Equals:
    - Ref: Nat3EIPAllocationId
    - dynamic
  NatIPAddress3Required:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az3
          - false
      - Fn::Or:
        - Fn::Equals:
          - '4'
          - Ref: MaxNatGateways
        - Fn::Equals:
          - '5'
          - Ref: MaxNatGateways
    - Fn::Equals:
      - Ref: Nat3EIPAllocationId
      - dynamic
  Nat4EIPRequired:
    Fn::Equals:
    - Ref: Nat4EIPAllocationId
    - dynamic
  NatIPAddress4Required:
    Fn::And:
    - Fn::And:
      - Fn::Not:
        - Fn::Equals:
          - Ref: Az4
          - false
      - Fn::Equals:
        - '5'
        - Ref: MaxNatGateways
    - Fn::Equals:
      - Ref: Nat4EIPAllocationId
      - dynamic
  LocalNSRecords:
    Fn::And:
    - Fn::Equals:
      - Ref: dnszoneAddNSRecords
      - 'true'
    - Fn::Equals:
      - Ref: dnszoneParentIAMRole
      - ''
  RemoteNSRecords:
    Fn::And:
    - Fn::Equals:
      - Ref: dnszoneAddNSRecords
      - 'true'
    - Fn::Not:
      - Fn::Equals:
        - Ref: dnszoneParentIAMRole
        - ''
  CreateZone:
    Fn::Equals:
    - 'true'
    - 'true'
Resources:
  VPC:
    Properties:
      CidrBlock:
        Fn::Join:
        - ''
        - - Ref: NetworkPrefix
          - "."
          - Ref: StackOctet
          - ".0.0/"
          - Ref: StackMask
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Environment
        Value:
          Ref: EnvironmentName
      - Key: EnvironmentType
        Value:
          Ref: EnvironmentType
      - Key: Name
        Value:
          Fn::Sub: "${EnvironmentName}-vpc"
    Type: AWS::EC2::VPC
  DHCPOptionSet:
    Properties:
      DomainName:
        Fn::Join:
        - "."
        - - Ref: EnvironmentName
          - Ref: DnsDomain
      DomainNameServers:
      - AmazonProvidedDNS
    Type: AWS::EC2::DHCPOptions
  DHCPOptionsAssociation:
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: DHCPOptionSet
    Type: AWS::EC2::VPCDHCPOptionsAssociation
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
    Type: AWS::EC2::VPCGatewayAttachment
  PublicNetworkAcl:
    Properties:
      VpcId:
        Ref: VPC
    Type: AWS::EC2::NetworkAcl
  inbound100:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 100
      Protocol: '6'
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22
    Type: AWS::EC2::NetworkAclEntry
  inbound200:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 200
      Protocol: '6'
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
    Type: AWS::EC2::NetworkAclEntry
  inbound300:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 300
      Protocol: '6'
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
    Type: AWS::EC2::NetworkAclEntry
  inbound400:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 400
      Protocol: '6'
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
    Type: AWS::EC2::NetworkAclEntry
  inbound500:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 500
      Protocol: 17
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
    Type: AWS::EC2::NetworkAclEntry
  outbound100:
    Properties:
      NetworkAclId:
        Ref: PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
    Type: AWS::EC2::NetworkAclEntry
  RouteTablePublic:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-public"
    Type: AWS::EC2::RouteTable
  PublicRouteOutToInternet:
    DependsOn:
    - AttachGateway
    Properties:
      RouteTableId:
        Ref: RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
    Type: AWS::EC2::Route
  RouteTablePrivate0:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-private0"
    Type: AWS::EC2::RouteTable
    Condition: Az0
  NatIPAddress0:
    DependsOn:
    - AttachGateway
    Condition: NatIPAddress0Required
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway0:
    Condition: NatGateway0Exist
    Properties:
      AllocationId:
        Fn::If:
        - Nat0EIPRequired
        - Fn::GetAtt:
          - NatIPAddress0
          - AllocationId
        - Ref: Nat0EIPAllocationId
      SubnetId:
        Ref: SubnetPublic0
    Type: AWS::EC2::NatGateway
  RouteOutToInternet0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedByNat0
  RouteOutToInternet0Nat0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate0
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedBySingleNat0
  RouteTablePrivate1:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-private1"
    Type: AWS::EC2::RouteTable
    Condition: Az1
  NatIPAddress1:
    DependsOn:
    - AttachGateway
    Condition: NatIPAddress1Required
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway1:
    Condition: NatGateway1Exist
    Properties:
      AllocationId:
        Fn::If:
        - Nat1EIPRequired
        - Fn::GetAtt:
          - NatIPAddress1
          - AllocationId
        - Ref: Nat1EIPAllocationId
      SubnetId:
        Ref: SubnetPublic1
    Type: AWS::EC2::NatGateway
  RouteOutToInternet1:
    DependsOn:
    - NatGateway1
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway1
    Type: AWS::EC2::Route
    Condition: RoutedByNat1
  RouteOutToInternet1Nat0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedBySingleNat1
  RouteTablePrivate2:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-private2"
    Type: AWS::EC2::RouteTable
    Condition: Az2
  NatIPAddress2:
    DependsOn:
    - AttachGateway
    Condition: NatIPAddress2Required
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway2:
    Condition: NatGateway2Exist
    Properties:
      AllocationId:
        Fn::If:
        - Nat2EIPRequired
        - Fn::GetAtt:
          - NatIPAddress2
          - AllocationId
        - Ref: Nat2EIPAllocationId
      SubnetId:
        Ref: SubnetPublic2
    Type: AWS::EC2::NatGateway
  RouteOutToInternet2:
    DependsOn:
    - NatGateway2
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway2
    Type: AWS::EC2::Route
    Condition: RoutedByNat2
  RouteOutToInternet2Nat0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedBySingleNat2
  RouteTablePrivate3:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-private3"
    Type: AWS::EC2::RouteTable
    Condition: Az3
  NatIPAddress3:
    DependsOn:
    - AttachGateway
    Condition: NatIPAddress3Required
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway3:
    Condition: NatGateway3Exist
    Properties:
      AllocationId:
        Fn::If:
        - Nat3EIPRequired
        - Fn::GetAtt:
          - NatIPAddress3
          - AllocationId
        - Ref: Nat3EIPAllocationId
      SubnetId:
        Ref: SubnetPublic3
    Type: AWS::EC2::NatGateway
  RouteOutToInternet3:
    DependsOn:
    - NatGateway3
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway3
    Type: AWS::EC2::Route
    Condition: RoutedByNat3
  RouteOutToInternet3Nat0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedBySingleNat3
  RouteTablePrivate4:
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Ref: EnvironmentName
            - "-private4"
    Type: AWS::EC2::RouteTable
    Condition: Az4
  NatIPAddress4:
    DependsOn:
    - AttachGateway
    Condition: NatIPAddress4Required
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway4:
    Condition: NatGateway4Exist
    Properties:
      AllocationId:
        Fn::If:
        - Nat4EIPRequired
        - Fn::GetAtt:
          - NatIPAddress4
          - AllocationId
        - Ref: Nat4EIPAllocationId
      SubnetId:
        Ref: SubnetPublic4
    Type: AWS::EC2::NatGateway
  RouteOutToInternet4:
    DependsOn:
    - NatGateway4
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway4
    Type: AWS::EC2::Route
    Condition: RoutedByNat4
  RouteOutToInternet4Nat0:
    DependsOn:
    - NatGateway0
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate4
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway0
    Type: AWS::EC2::Route
    Condition: RoutedBySingleNat4
  SubnetPublic0:
    Condition: Az0
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".0.0/24"
      AvailabilityZone:
        Ref: Az0
      Tags:
      - Key: Name
        Value: Public0
  ACLAssociationSubnetPublic0:
    Condition: Az0
    Properties:
      SubnetId:
        Ref: SubnetPublic0
      NetworkAclId:
        Ref: PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
  RouteTableAssociationSubnetPublic0:
    Condition: Az0
    Properties:
      SubnetId:
        Ref: SubnetPublic0
      RouteTableId:
        Ref: RouteTablePublic
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPublic1:
    Condition: Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".1.0/24"
      AvailabilityZone:
        Ref: Az1
      Tags:
      - Key: Name
        Value: Public1
  ACLAssociationSubnetPublic1:
    Condition: Az1
    Properties:
      SubnetId:
        Ref: SubnetPublic1
      NetworkAclId:
        Ref: PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
  RouteTableAssociationSubnetPublic1:
    Condition: Az1
    Properties:
      SubnetId:
        Ref: SubnetPublic1
      RouteTableId:
        Ref: RouteTablePublic
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPublic2:
    Condition: Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".2.0/24"
      AvailabilityZone:
        Ref: Az2
      Tags:
      - Key: Name
        Value: Public2
  ACLAssociationSubnetPublic2:
    Condition: Az2
    Properties:
      SubnetId:
        Ref: SubnetPublic2
      NetworkAclId:
        Ref: PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
  RouteTableAssociationSubnetPublic2:
    Condition: Az2
    Properties:
      SubnetId:
        Ref: SubnetPublic2
      RouteTableId:
        Ref: RouteTablePublic
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPublic3:
    Condition: Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".3.0/24"
      AvailabilityZone:
        Ref: Az3
      Tags:
      - Key: Name
        Value: Public3
  ACLAssociationSubnetPublic3:
    Condition: Az3
    Properties:
      SubnetId:
        Ref: SubnetPublic3
      NetworkAclId:
        Ref: PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
  RouteTableAssociationSubnetPublic3:
    Condition: Az3
    Properties:
      SubnetId:
        Ref: SubnetPublic3
      RouteTableId:
        Ref: RouteTablePublic
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPublic4:
    Condition: Az4
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".4.0/24"
      AvailabilityZone:
        Ref: Az4
      Tags:
      - Key: Name
        Value: Public4
  ACLAssociationSubnetPublic4:
    Condition: Az4
    Properties:
      SubnetId:
        Ref: SubnetPublic4
      NetworkAclId:
        Ref: PublicNetworkAcl
    Type: AWS::EC2::SubnetNetworkAclAssociation
  RouteTableAssociationSubnetPublic4:
    Condition: Az4
    Properties:
      SubnetId:
        Ref: SubnetPublic4
      RouteTableId:
        Ref: RouteTablePublic
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCompute0:
    Condition: Az0
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".5.0/24"
      AvailabilityZone:
        Ref: Az0
      Tags:
      - Key: Name
        Value: Compute0
  RouteTableAssociationSubnetCompute0:
    Condition: Az0
    Properties:
      SubnetId:
        Ref: SubnetCompute0
      RouteTableId:
        Ref: RouteTablePrivate0
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCompute1:
    Condition: Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".6.0/24"
      AvailabilityZone:
        Ref: Az1
      Tags:
      - Key: Name
        Value: Compute1
  RouteTableAssociationSubnetCompute1:
    Condition: Az1
    Properties:
      SubnetId:
        Ref: SubnetCompute1
      RouteTableId:
        Ref: RouteTablePrivate1
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCompute2:
    Condition: Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".7.0/24"
      AvailabilityZone:
        Ref: Az2
      Tags:
      - Key: Name
        Value: Compute2
  RouteTableAssociationSubnetCompute2:
    Condition: Az2
    Properties:
      SubnetId:
        Ref: SubnetCompute2
      RouteTableId:
        Ref: RouteTablePrivate2
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCompute3:
    Condition: Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".8.0/24"
      AvailabilityZone:
        Ref: Az3
      Tags:
      - Key: Name
        Value: Compute3
  RouteTableAssociationSubnetCompute3:
    Condition: Az3
    Properties:
      SubnetId:
        Ref: SubnetCompute3
      RouteTableId:
        Ref: RouteTablePrivate3
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCompute4:
    Condition: Az4
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".9.0/24"
      AvailabilityZone:
        Ref: Az4
      Tags:
      - Key: Name
        Value: Compute4
  RouteTableAssociationSubnetCompute4:
    Condition: Az4
    Properties:
      SubnetId:
        Ref: SubnetCompute4
      RouteTableId:
        Ref: RouteTablePrivate4
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPersistence0:
    Condition: Az0
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".10.0/24"
      AvailabilityZone:
        Ref: Az0
      Tags:
      - Key: Name
        Value: Persistence0
  RouteTableAssociationSubnetPersistence0:
    Condition: Az0
    Properties:
      SubnetId:
        Ref: SubnetPersistence0
      RouteTableId:
        Ref: RouteTablePrivate0
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPersistence1:
    Condition: Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".11.0/24"
      AvailabilityZone:
        Ref: Az1
      Tags:
      - Key: Name
        Value: Persistence1
  RouteTableAssociationSubnetPersistence1:
    Condition: Az1
    Properties:
      SubnetId:
        Ref: SubnetPersistence1
      RouteTableId:
        Ref: RouteTablePrivate1
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPersistence2:
    Condition: Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".12.0/24"
      AvailabilityZone:
        Ref: Az2
      Tags:
      - Key: Name
        Value: Persistence2
  RouteTableAssociationSubnetPersistence2:
    Condition: Az2
    Properties:
      SubnetId:
        Ref: SubnetPersistence2
      RouteTableId:
        Ref: RouteTablePrivate2
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPersistence3:
    Condition: Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".13.0/24"
      AvailabilityZone:
        Ref: Az3
      Tags:
      - Key: Name
        Value: Persistence3
  RouteTableAssociationSubnetPersistence3:
    Condition: Az3
    Properties:
      SubnetId:
        Ref: SubnetPersistence3
      RouteTableId:
        Ref: RouteTablePrivate3
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetPersistence4:
    Condition: Az4
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".14.0/24"
      AvailabilityZone:
        Ref: Az4
      Tags:
      - Key: Name
        Value: Persistence4
  RouteTableAssociationSubnetPersistence4:
    Condition: Az4
    Properties:
      SubnetId:
        Ref: SubnetPersistence4
      RouteTableId:
        Ref: RouteTablePrivate4
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCache0:
    Condition: Az0
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".15.0/24"
      AvailabilityZone:
        Ref: Az0
      Tags:
      - Key: Name
        Value: Cache0
  RouteTableAssociationSubnetCache0:
    Condition: Az0
    Properties:
      SubnetId:
        Ref: SubnetCache0
      RouteTableId:
        Ref: RouteTablePrivate0
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCache1:
    Condition: Az1
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".16.0/24"
      AvailabilityZone:
        Ref: Az1
      Tags:
      - Key: Name
        Value: Cache1
  RouteTableAssociationSubnetCache1:
    Condition: Az1
    Properties:
      SubnetId:
        Ref: SubnetCache1
      RouteTableId:
        Ref: RouteTablePrivate1
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCache2:
    Condition: Az2
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".17.0/24"
      AvailabilityZone:
        Ref: Az2
      Tags:
      - Key: Name
        Value: Cache2
  RouteTableAssociationSubnetCache2:
    Condition: Az2
    Properties:
      SubnetId:
        Ref: SubnetCache2
      RouteTableId:
        Ref: RouteTablePrivate2
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCache3:
    Condition: Az3
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".18.0/24"
      AvailabilityZone:
        Ref: Az3
      Tags:
      - Key: Name
        Value: Cache3
  RouteTableAssociationSubnetCache3:
    Condition: Az3
    Properties:
      SubnetId:
        Ref: SubnetCache3
      RouteTableId:
        Ref: RouteTablePrivate3
    Type: AWS::EC2::SubnetRouteTableAssociation
  SubnetCache4:
    Condition: Az4
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: StackOctet
          - ".19.0/24"
      AvailabilityZone:
        Ref: Az4
      Tags:
      - Key: Name
        Value: Cache4
  RouteTableAssociationSubnetCache4:
    Condition: Az4
    Properties:
      SubnetId:
        Ref: SubnetCache4
      RouteTableId:
        Ref: RouteTablePrivate4
    Type: AWS::EC2::SubnetRouteTableAssociation
  VPCEndpoint:
    Properties:
      VpcId:
        Ref: VPC
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: "*"
          Action:
          - s3:*
          Resource:
          - arn:aws:s3:::*
      ServiceName:
        Fn::Join:
        - ''
        - - com.amazonaws.
          - Ref: AWS::Region
          - ".s3"
      RouteTableIds:
        Fn::If:
        - 5Az
        - - Ref: RouteTablePrivate0
          - Ref: RouteTablePrivate1
          - Ref: RouteTablePrivate2
          - Ref: RouteTablePrivate3
          - Ref: RouteTablePrivate4
        - Fn::If:
          - 4Az
          - - Ref: RouteTablePrivate0
            - Ref: RouteTablePrivate1
            - Ref: RouteTablePrivate2
            - Ref: RouteTablePrivate3
          - Fn::If:
            - 3Az
            - - Ref: RouteTablePrivate0
              - Ref: RouteTablePrivate1
              - Ref: RouteTablePrivate2
            - Fn::If:
              - 2Az
              - - Ref: RouteTablePrivate0
                - Ref: RouteTablePrivate1
              - Fn::If:
                - 1Az
                - - Ref: RouteTablePrivate0
                - Ref: RouteTablePrivate0
    Type: AWS::EC2::VPCEndpoint
  SecurityGroupOps:
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Ops External Access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 169.254.100.100/32
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 169.254.100.100/32
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: 169.254.100.100/32
    Type: AWS::EC2::SecurityGroup
  SecurityGroupDev:
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Dev Team Access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 169.254.100.100/32
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 169.254.100.100/32
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: 169.254.100.100/32
    Type: AWS::EC2::SecurityGroup
  SecurityGroupBackplane:
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Backplane SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: tcp
        FromPort: '25'
        ToPort: '25'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: udp
        FromPort: '123'
        ToPort: '123'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: udp
        FromPort: '123'
        ToPort: '123'
        CidrIp:
          Fn::Join:
          - ''
          - - '10.'
            - Ref: StackOctet
            - "."
            - 0.0/16
      - IpProtocol: tcp
        FromPort: '5666'
        ToPort: '5666'
        CidrIp: 169.254.100.100/32
    Type: AWS::EC2::SecurityGroup
  HostedZone:
    Condition: CreateZone
    Properties:
      Name:
        Fn::Join:
        - "."
        - - Ref: EnvironmentName
          - Fn::Sub: "${DnsDomain}."
      HostedZoneConfig:
        Comment:
          Fn::Sub: Hosted Zone for ${EnvironmentName}
      HostedZoneTags:
      - Key: Environment
        Value:
          Ref: EnvironmentName
      - Key: EnvironmentType
        Value:
          Ref: EnvironmentType
    Type: AWS::Route53::HostedZone
  DomainNameZoneNSRecords:
    Condition: RemoteNSRecords
    Type: Custom::Route53ZoneNSRecords
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - Route53ZoneCR
        - Arn
      AwsRegion:
        Ref: AWS::Region
      RootDomainName:
        Fn::Sub: "${DnsDomain}."
      DomainName:
        Fn::Join:
        - "."
        - - Ref: EnvironmentName
          - Fn::Sub: "${DnsDomain}."
      NSRecords:
        Fn::GetAtt:
        - HostedZone
        - NameServers
      ParentIAMRole:
        Ref: dnszoneParentIAMRole
  NSRecords:
    Condition: LocalNSRecords
    Properties:
      HostedZoneName:
        Fn::Sub: "${DnsDomain}."
      Comment:
        Fn::Join:
        - ''
        - - Fn::Sub: "${EnvironmentName} - NS Records for ${EnvironmentName}."
          - Fn::Sub: "${DnsDomain}."
      Name:
        Fn::Join:
        - "."
        - - Ref: EnvironmentName
          - Fn::Sub: "${DnsDomain}."
      Type: NS
      TTL: 60
      ResourceRecords:
        Fn::GetAtt:
        - HostedZone
        - NameServers
    Type: AWS::Route53::RecordSet
  LambdaRoleRoute53ZoneResource:
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: cloudwatch-logs
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            - logs:DescribeLogGroups
            Resource:
            - arn:aws:logs:*:*:*
      - PolicyName: route53
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - route53:*
            Resource: "*"
      - PolicyName: opsdns
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - sts:AssumeRole
            Resource:
            - Fn::If:
              - RemoteNSRecords
              - Ref: dnszoneParentIAMRole
              - arn:aws:iam::123456789012:user/noaccess
    Type: AWS::IAM::Role
  Route53ZoneCR:
    Properties:
      Code:
        S3Bucket: 855280047356.ap-southeast-2.ciinabox
        S3Key: cloudformation/ciinabox-example/0.1.0/Route53ZoneCR.dnszone.0.1.0.1548867245.zip
      Environment:
        Variables:
          ENVIRONMENT_NAME:
            Ref: EnvironmentName
      Handler: route53_zone_cr.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - LambdaRoleRoute53ZoneResource
        - Arn
      Runtime: python3.6
      Timeout: 600
    Type: AWS::Lambda::Function
  Route53ZoneCRVersion1548867245:
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: Route53ZoneCR
      CodeSha256: ZM+cK6PDbjVEuFRea/DU6q5kwBqXHMAv9DqyTjLx1ao=
    Type: AWS::Lambda::Version
Outputs:
  SubnetPublic0:
    Value:
      Fn::If:
      - Az0
      - Ref: SubnetPublic0
      - ''
  SubnetPublic1:
    Value:
      Fn::If:
      - Az1
      - Ref: SubnetPublic1
      - ''
  SubnetPublic2:
    Value:
      Fn::If:
      - Az2
      - Ref: SubnetPublic2
      - ''
  SubnetPublic3:
    Value:
      Fn::If:
      - Az3
      - Ref: SubnetPublic3
      - ''
  SubnetPublic4:
    Value:
      Fn::If:
      - Az4
      - Ref: SubnetPublic4
      - ''
  SubnetCompute0:
    Value:
      Fn::If:
      - Az0
      - Ref: SubnetCompute0
      - ''
  SubnetCompute1:
    Value:
      Fn::If:
      - Az1
      - Ref: SubnetCompute1
      - ''
  SubnetCompute2:
    Value:
      Fn::If:
      - Az2
      - Ref: SubnetCompute2
      - ''
  SubnetCompute3:
    Value:
      Fn::If:
      - Az3
      - Ref: SubnetCompute3
      - ''
  SubnetCompute4:
    Value:
      Fn::If:
      - Az4
      - Ref: SubnetCompute4
      - ''
  SubnetPersistence0:
    Value:
      Fn::If:
      - Az0
      - Ref: SubnetPersistence0
      - ''
  SubnetPersistence1:
    Value:
      Fn::If:
      - Az1
      - Ref: SubnetPersistence1
      - ''
  SubnetPersistence2:
    Value:
      Fn::If:
      - Az2
      - Ref: SubnetPersistence2
      - ''
  SubnetPersistence3:
    Value:
      Fn::If:
      - Az3
      - Ref: SubnetPersistence3
      - ''
  SubnetPersistence4:
    Value:
      Fn::If:
      - Az4
      - Ref: SubnetPersistence4
      - ''
  SubnetCache0:
    Value:
      Fn::If:
      - Az0
      - Ref: SubnetCache0
      - ''
  SubnetCache1:
    Value:
      Fn::If:
      - Az1
      - Ref: SubnetCache1
      - ''
  SubnetCache2:
    Value:
      Fn::If:
      - Az2
      - Ref: SubnetCache2
      - ''
  SubnetCache3:
    Value:
      Fn::If:
      - Az3
      - Ref: SubnetCache3
      - ''
  SubnetCache4:
    Value:
      Fn::If:
      - Az4
      - Ref: SubnetCache4
      - ''
  VPCId:
    Value:
      Ref: VPC
    Export:
      Name:
        Fn::Sub: "${EnvironmentName}-vpc-VPCId"
  SecurityGroupOps:
    Value:
      Ref: SecurityGroupOps
    Export:
      Name:
        Fn::Sub: "${EnvironmentName}-vpc-SecurityGroupOps"
  SecurityGroupDev:
    Value:
      Ref: SecurityGroupDev
    Export:
      Name:
        Fn::Sub: "${EnvironmentName}-vpc-SecurityGroupDev"
  SecurityGroupBackplane:
    Value:
      Ref: SecurityGroupBackplane
    Export:
      Name:
        Fn::Sub: "${EnvironmentName}-vpc-SecurityGroupBackplane"
  NatGatewayIps:
    Value:
      Fn::Join:
      - ","
      - Fn::If:
        - NatGateway4Exist
        - - Fn::If:
            - Nat0EIPRequired
            - Ref: NatIPAddress0
            - Ref: AWS::NoValue
          - Fn::If:
            - Nat1EIPRequired
            - Ref: NatIPAddress1
            - Ref: AWS::NoValue
          - Fn::If:
            - Nat2EIPRequired
            - Ref: NatIPAddress2
            - Ref: AWS::NoValue
          - Fn::If:
            - Nat3EIPRequired
            - Ref: NatIPAddress3
            - Ref: AWS::NoValue
          - Fn::If:
            - Nat4EIPRequired
            - Ref: NatIPAddress4
            - Ref: AWS::NoValue
        - Fn::If:
          - NatGateway3Exist
          - - Fn::If:
              - Nat0EIPRequired
              - Ref: NatIPAddress0
              - Ref: AWS::NoValue
            - Fn::If:
              - Nat1EIPRequired
              - Ref: NatIPAddress1
              - Ref: AWS::NoValue
            - Fn::If:
              - Nat2EIPRequired
              - Ref: NatIPAddress2
              - Ref: AWS::NoValue
            - Fn::If:
              - Nat3EIPRequired
              - Ref: NatIPAddress3
              - Ref: AWS::NoValue
          - Fn::If:
            - NatGateway2Exist
            - - Fn::If:
                - Nat0EIPRequired
                - Ref: NatIPAddress0
                - Ref: AWS::NoValue
              - Fn::If:
                - Nat1EIPRequired
                - Ref: NatIPAddress1
                - Ref: AWS::NoValue
              - Fn::If:
                - Nat2EIPRequired
                - Ref: NatIPAddress2
                - Ref: AWS::NoValue
            - Fn::If:
              - NatGateway1Exist
              - - Fn::If:
                  - Nat0EIPRequired
                  - Ref: NatIPAddress0
                  - Ref: AWS::NoValue
                - Fn::If:
                  - Nat1EIPRequired
                  - Ref: NatIPAddress1
                  - Ref: AWS::NoValue
              - Fn::If:
                - NatGateway0Exist
                - - Fn::If:
                    - Nat0EIPRequired
                    - Ref: NatIPAddress0
                    - Ref: AWS::NoValue
                - Fn::If:
                  - Nat0EIPRequired
                  - Ref: NatIPAddress0
                  - Ref: AWS::NoValue
  CfTemplateUrl:
    Value: https://855280047356.ap-southeast-2.ciinabox.s3.amazonaws.com/cloudformation/ciinabox-example/0.1.0/vpc.compiled.yaml
  CfTemplateVersion:
    Value: 0.1.0
  DnsDomainZoneId:
    Condition: CreateZone
    Value:
      Ref: HostedZone
  dnszoneCfTemplateUrl:
    Value: https://855280047356.ap-southeast-2.ciinabox.s3.amazonaws.com/cloudformation/ciinabox-example/0.1.0/route53-zone.compiled.yaml
  dnszoneCfTemplateVersion:
    Value: 0.1.0
Parameters:
  EnvironmentType:
    Type: String
    Default: development
    NoEcho: false
  EnvironmentName:
    Type: String
    Default: dev
    NoEcho: false
  StackOctet:
    Type: String
    Default: '10'
    NoEcho: false
  NetworkPrefix:
    Type: String
    Default: '10'
    NoEcho: false
  StackMask:
    Type: String
    Default: '16'
    NoEcho: false
  Az0:
    Type: String
    Default: ''
    NoEcho: false
  Nat0EIPAllocationId:
    Type: String
    Default: dynamic
    NoEcho: false
  Az1:
    Type: String
    Default: ''
    NoEcho: false
  Nat1EIPAllocationId:
    Type: String
    Default: dynamic
    NoEcho: false
  Az2:
    Type: String
    Default: ''
    NoEcho: false
  Nat2EIPAllocationId:
    Type: String
    Default: dynamic
    NoEcho: false
  Az3:
    Type: String
    Default: ''
    NoEcho: false
  Nat3EIPAllocationId:
    Type: String
    Default: dynamic
    NoEcho: false
  Az4:
    Type: String
    Default: ''
    NoEcho: false
  Nat4EIPAllocationId:
    Type: String
    Default: dynamic
    NoEcho: false
  DnsDomain:
    Type: String
    Default: ''
    NoEcho: false
  MaxNatGateways:
    Type: String
    Default: '5'
    NoEcho: false
  SingleNatGateway:
    Type: String
    Default: 'true'
    NoEcho: false
  dnszoneAddNSRecords:
    Type: String
    Default: 'false'
    NoEcho: false
    AllowedValues:
    - 'true'
    - 'false'
  dnszoneParentIAMRole:
    Type: String
    Default: ''
    NoEcho: false
Description: Highlander VPC component 0.1.0
