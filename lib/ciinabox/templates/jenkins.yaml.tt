jenkins:
  clouds:
  - eC2Fleet:
      addNodeOnlyIfRunning: false
      alwaysReconnect: false
      computerConnector:
        sSHConnector:
          credentialsId: "ec2-fleet"
          launchTimeoutSeconds: 60000
          maxNumRetries: 0
          port: 22
          retryWaitTime: 0
          sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
      disableTaskResubmit: false
      fleet: "REPLACE FLEET ID HERE"
      idleMinutes: 15
      initOnlineCheckIntervalSec: 15
      initOnlineTimeoutSec: 180
      labelString: "ec2-fleet"
      maxSize: 2
      minSize: 0
      name: "ec2-fleet"
      numExecutors: 8
      oldId: "db755530-592c-4f8d-b7ea-ba3fcbfa3122"
      privateIpUsed: true
      region: "<%= @region %>"
      restrictUsage: false
      scaleExecutorsByWeight: false
  systemMessage: |
    Authorized access only! 
    Disconnect IMMEDIATELY if you are not an authorized user!!!
    All actions Will be monitored and recorded
  numExecutors: 0
  
unclassified:
  globalLibraries:
    libraries:
    - defaultVersion: "master"
      name: "ciinabox"
      retriever:
        modernSCM:
          scm:
            github:
              repoOwner: "base2services"
              repository: "ciinabox-pipelines"
              traits:
              - gitHubBranchDiscovery:
                  strategyId: 1
              - originPullRequestDiscoveryTrait:
                  strategyId: 1
              - gitHubForkDiscovery:
                  strategyId: 1
                  trust: "gitHubTrustPermissions"

credentials:
  system:
    domainCredentials:
      - credentials:
        - basicSSHUserPrivateKey:
            scope: SYSTEM
            id: ec2-fleet
            username: ec2-user
            description: SSH Key generated by ciinabox so the master can connect to the ec2-fleet agents
            privateKeySource:
              directEntry:
                privateKey: ${CIINABOX_KEYPAIR}                  
