CfhighlanderTemplate do

  ComponentDistribution "s3://#{source_bucket}/ciinabox/cloudformation/#{component_name}"
  ComponentVersion "#{Ciinabox::VERSION}"

  Parameters do
    ComponentParam 'CiinaboxAmi', '<%= @config['ciinabox_ami'] %>', type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
  end

  Component template: 'vpc-v2@master.snapshot', name: 'vpc', config: vpc do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'DnsDomain', value: "#{root_domain}"
    parameter name: 'AvailabiltiyZones', value: '2'
    parameter name: 'NetworkBits', value: '10.0'
    parameter name: 'NatGateways', value: '1'
    parameter name: 'NatGatewayEIPs', value: ''
    parameter name: 'EnableTransitVPC', value: 'false'
    parameter name: 'dnszoneAddNSRecords', value: 'true'
    parameter name: 'dnszoneParentIAMRole', value: ''
  end

  Component template: 'acm@1.1.1', name: 'acm' do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'DomainName', value: "*.#{component_name}.#{root_domain}"
    parameter name: 'CrossAccountDNSZoneIAMRole', value: ''
  end

  Component template: 'application-loadbalancer@0.1.0', name: 'loadbalancer', config: loadbalancer do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'NetworkPrefix', value: '10'
    parameter name: 'DnsDomain', value: "#{root_domain}"
    parameter name: 'SslCertId', value: 'acm.CertificateArn'
    parameter name: 'StackOctet', value: "#{stack_octet}"
    parameter name: 'SubnetIds', value: cfout('vpc.PublicSubnets')
  end

  Component template: 'keypair@1.0.0', name: 'keypair' do
    parameter name: 'KeyPairName', value: "#{component_name}"
    parameter name: 'SSMParameterPath', value: "/ciinabox/keypair"
  end

  Component template: 'service-discovery@0.1.0', name: 'servicediscovery', config: { namespace: "${EnvironmentName}.ciinabox" } do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
  end
  
  Component template: 'github:base2services/hl-component-jcasc-pipeline#master.snapshot', name: 'jcasc' do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'VPC', value: cfout('vpc.VPCId')
    parameter name: 'VPCEndpointId', value: cfout('vpc.S3VPCEndpointId')
    parameter name: 'SubnetIds', value: cfout('vpc.ComputeSubnets')
    parameter name: 'JenkinsUrl', value: "https://jenkins.#{component_name}.#{root_domain}"
  end

  Component template: 'github:guslington/hl-component-ecs#develop.snapshot', name: 'ecs', config: ecs do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'StackOctet', value: "#{stack_octet}"
    parameter name: 'KeyName', value: cfout('keypair.KeyPair')
    parameter name: 'DnsDomain', value:"#{root_domain}"
    parameter name: 'AsgMin', value: '1'
    parameter name: 'AsgMax', value: '2'
    parameter name: 'InstanceType', value: "#{ecs_instance_type}"
    parameter name: 'Ami', value: Ref('CiinaboxAmi')
    parameter name: 'SecurityGroupBastion', value: 'loadbalancer.SecurityGroup'
    parameter name: 'SecurityGroupLoadBalancer', value: 'loadbalancer.SecurityGroup'
    parameter name: 'SubnetIds', value: cfout('vpc.ComputeSubnets')
    parameter name: 'VPCCidr', value: cfout('vpc.VPCCidr')
    parameter name: 'AsgDesired', value: 1
    parameter name: 'EnableScaling', value: 'false'
    parameter name: 'SpotPrice', value: ''
    parameter name: 'LaunchTemplateVersion', value: 'latest'
  end

  Component template: 'ecs-service@2.3.0', name: 'jenkins', config: jenkins do
    parameter name: 'EnvironmentName', value: component_name
    parameter name: 'EnvironmentType', value: 'development'
    parameter name: 'NetworkPrefix', value: '10'
    parameter name: 'LoadBalancer', value: 'loadbalancer.LoadBalancer'
    parameter name: 'Listener', value: 'loadbalancer.httpsListener'
    parameter name: 'MinimumHealthyPercent', value: 0
    parameter name: 'MaximumPercent', value: 100
    parameter name: 'DesiredCount', value: 1
    parameter name: 'EnableScaling', value: 'false'
    parameter name: 'DnsDomain', value: "#{root_domain}"
    parameter name: 'SubnetIds', value: cfout('vpc.ComputeSubnets')
    parameter name: 'StackOctet', value: "#{stack_octet}"
    parameter name: 'NamespaceId', value: cfout('servicediscovery.NamespaceId')
    parameter name: 'S3Bucket', value: "#{source_bucket}"
    parameter name: 'Version', value: "#{jenkins['version']}"
  end
  
end
